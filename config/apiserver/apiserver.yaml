apiVersion: apps/v1
kind: Deployment
metadata:
  name: apiserver
  namespace: system
  labels:
    control-plane: apiserver
    app.kubernetes.io/name: virt-template
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: apiserver
      app.kubernetes.io/name: virt-template
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: apiserver
      labels:
        control-plane: apiserver
        app.kubernetes.io/name: virt-template
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
                    - s390x
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
      securityContext:
        # Projects are configured by default to adhere to the "restricted" Pod Security Standards.
        # This ensures that deployments meet the highest security requirements for Kubernetes.
        # For more details, see: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - command:
        - /apiserver
        args:
          - --disable-http2-serving
          - --secure-port=9443
        image: apiserver:latest
        name: apiserver
        ports:
        - containerPort: 9443
          name: api
          protocol: TCP
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
        livenessProbe:
          httpGet:
            path: /livez
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        volumeMounts: []
      volumes: []
      serviceAccountName: apiserver
      terminationGracePeriodSeconds: 10
